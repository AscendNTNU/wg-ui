steps:
  - name: Build container image
    branches: "!master"
    agents:
      queue: default
      os: linux
    commands:
      - ./build.sh
  - name: Build & push container image
    branches: "master"
    agents:
      queue: default
      os: linux
    commands:
      - ./build.sh
      - buildah push --format=v2s2 --authfile /root/.dockerhub/config.json embarkstudios/wireguard-ui:latest
      - tar czf wireguard-ui-linux-amd64-latest.tar.gz ./wireguard-ui
      - buildkite-agent artifact upload wireguard-ui-linux-amd64-latest.tar.gz
  - name: Build and push debug container image
    branches: "master"
    agents:
      queue: default
      os: linux
    commands:
      - buildah bud --format=docker --layers -t embarkstudios/wireguard-ui:debug -f Dockerfile.debug .
      - buildah push --format=v2s2 --authfile /root/.dockerhub/config.json embarkstudios/wireguard-ui:debug
